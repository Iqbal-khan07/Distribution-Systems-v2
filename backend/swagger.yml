swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger REST Article
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api"

#Global API Key Security
#security:
#  - APIKeyHeader: []

# Paths supported by the server application
paths:
  /user:
    get:
      operationId: "api.user_read"
      tags:
        - "Users"
      summary: "The user data structure supported by the server application"
      description: "Read the list of users"
      responses:
        200:
          description: "Successful read user list operation"
          schema:
            type: "array"
            items:
              properties:
                first:
                  type: "string"
                last:
                  type: "string"
                email:
                  type: "string"
                number:
                  type: "string"
                role:
                  type: "string"
                timestamp:
                  type: "string"
                  
    post:
      operationId: api.user_create
      tags:
        - Users
      summary: Create a user and add it to the user list
      description: Create a new user in the user list
      parameters:
        - name: new_user
          in: body
          description: User to create
          required: True
          schema:
            type: object
            properties:
              first:
                type: string
                description: Email of user to create
              last:
                type: string
                description: Email of user to create    
              email:
                type: string
                description: Email of user to create
              password:
                type: string
                description: Password of user to create
              number:
                type: string
                description: Password of user to create
              role:
                type: string
                description: Role of user to create

      responses:
        201:
          description: Successfully created user in list
  
  /user/{user_email}:
    get:
      operationId: api.user_read_one
      tags:
        - Users
      summary: Read one user from the users list
      description: Read one user from the users list
      parameters:
        - name: user_email
          in: path
          description: Email of the user to get from the list
          type: string
          required: True
      responses:
        200:
          description: Successfully read email from user list operation
          schema:
            properties:
              first:
                type: string
              last:
                type: string
              email:
                type: string
              number:
                type: string
              role:
                type: string
              timestamp:
                type: string
  /shop:
    get:
      operationId: "api.shop_read"
      tags:
        - "Shops"
      summary: "The user data structure supported by the server application"
      description: "Read the list of users"
      responses:
        200:
          description: "Successful read user list operation"
          schema:
            type: "array"
            items:
              properties:
                name:
                  type: "string"
                email:
                  type: "string"
                number:
                  type: "string"
                catagory:
                  type: "string"
                street:
                  type: "string"
                city:
                  type: "string"
                providence:
                  type: "string"
                zip:
                  type: "string"
                timestamp:
                  type: "string"
                  
    post:
      operationId: api.shop_create
      tags:
        - Users
      summary: Create a user and add it to the user list
      description: Create a new user in the user list
      parameters:
        - name: new_shop
          in: body
          description: User to create
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
                description: Email of user to create
              email:
                type: string
                description: Email of user to create
              number:
                type: string
                description: Email of user to create
              catagory:
                type: string
                description: Email of user to create
              street:
                type: string
                description: Email of user to create
              city:
                type: string
                description: Role of user to create
              providence:
                type: string
                description: Password of user to create
              zip:
                type: string
                description: Email of user to create
      responses:
        201:
          description: Successfully created user in list
  
  /shop/{shop_name}:
    get:
      operationId: api.shop_read_one
      tags:
        - Users
      summary: Read one user from the users list
      description: Read one user from the users list
      parameters:
        - name: shop_name
          in: path
          description: Email of the user to get from the list
          type: string
          required: True
      responses:
        200:
          description: Successfully read email from user list operation
          schema:
            properties:
              name:
                type: string
              email:
                type: string
              number:
                type: string
              catagory:
                type: string
              street:
                type: string
              city:
                type: string
              providence:
                type: string
              zip:
                type: string
              timestamp:
                type: string
  /company:
    get:
      operationId: "api.company_read"
      tags:
        - "Users"
      summary: "The user data structure supported by the server application"
      description: "Read the list of users"
      responses:
        200:
          description: "Successful read user list operation"
          schema:
            type: "array"
            items:
              properties:
                name:
                  type: "string"
                timestamp:
                  type: "string"
                  
    post:
      operationId: api.company_create
      tags:
        - Users
      summary: Create a user and add it to the user list
      description: Create a new user in the user list
      parameters:
        - name: new_company
          in: body
          description: User to create
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
                description: Email of user to create
      responses:
        201:
          description: Successfully created user in list
  
  /user/{company_name}:
    get:
      operationId: api.company_read_one
      tags:
        - Users
      summary: Read one user from the users list
      description: Read one user from the users list
      parameters:
        - name: company_name
          in: path
          description: Email of the user to get from the list
          type: string
          required: True
      responses:
        200:
          description: Successfully read email from user list operation
          schema:
            properties:
              name:
                type: string
              timestamp:
                type: string
                
                
                
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: X-API-Key
    x-apikeyInfoFunc: api.basic_auth
    