swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger REST Article
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api"

#Global API Key Security
#security:
#  - APIKeyHeader: []

#Change definitions soon
# Paths supported by the server application

paths:
  /user/authenticate/default:
    post:
      operationId: api.user_authenticate_default
      tags:
        - sys_user
      summary: Authentication
      description: Authenticate user with username and password
      parameters:
        - name: auth_user_default
          in: body
          description: Data wrapper
          required: True
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  username:
                    type: string
                    description: User username
                  password:
                    type: string
                    description: User password
                required:
                  - username
                  - password
            required:
              - data
      responses:
        200:
          description: Successful authentication
          schema:
            type: object
            properties:
              data:
                type: object

  /user/authenticate/google:
    post:
      operationId: api.user_authenticate_gmail
      tags:
        - sys_user
      summary: Authentication
      description: Authenticate user with google email
      parameters:
        - name: auth_user_gmail
          in: body
          description: Data wrapper
          required: True
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  email:
                    type: string
                    description: User gmail
                required:
                 - email
            required:
             - data
      responses:
        200:
          description: Successful authentication
          schema:
            type: object
            properties:
              data:
                type: object

  /user/authenticate/facebook:
    post:
      operationId: api.user_authenticate_fb
      tags:
        - sys_user
      summary: Authentication
      description: Authenticate user with facebook email
      parameters:
        - name: auth_user_fb
          in: body
          description: Data wrapper
          required: True
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  email:
                    type: string
                    description: User facebook email
                required:
                 - email
            required:
             - data    
      responses:
        200:
          description: Successful authentication
          schema:
            type: object
            properties:
              data:
                type: object

  /company_product/request/all:
    get:
      operationId: api.get_company_product
      description: Return all company products in the database
      responses:
        200:
          description: List of all company products 
          schema:
            type: object
            properties:
              data:
                type: array

  /shop/request/not_delivered:
    get:
      operationId: api.get_order_not_delivered
      description: Return all shop orders in the database that have completed = False
      responses:
        200:
          description: List of all shop orders that are not delivered 
          schema:
            type: object
            properties:
              data:
                type: array

  /shop/request/all:
    get:
      operationId: api.get_all_shops
      description: Return all shops in database
      responses:
        200:
          description: List of all shops
          schema:
            type: object
            properties:
              data:
                type: array

  /zone/request/all:
    get:
      operationId: api.get_all_zones
      description: Return all zones in database
      responses:
        200:
          description: List of all zones 
          schema:
            type: object
            properties:
              data:
                type: array

  /shop_category/request/all:
    get:
      operationId: api.get_all_shop_category
      description: Return all shop categories in database
      responses:
        200:
          description: List of all shop categories
          schema:
            type: object
            properties:
              data:
                type: array

  /shop/create:
    post:
      operationId: api.shop_create
      description: Create a new shop with JSON data
      parameters:
        - name: new_shop
          in: body
          description: Data wrapper
          required: True
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  name:
                    type: string
                    description: Shop name
                  email:
                    type: string
                    x-nullable: true
                    description: Shop email
                  phone_number:
                    type: string
                    x-nullable: true
                    description: Shop phone number
                  category:
                    type: integer
                    x-nullable: true
                    description: Shop category
                  zones:
                    type: array
                    description: Shop zones
                    properties:
                      id:
                        type: integer
                        description: Zone database id
                    required:
                     - id
                  street:
                    type: string
                    description: Shop street address
                  city:
                    type: string
                    description: Shop city address
                  providence:
                    type: string
                    description: Shop providence
                  zip_4:
                    type: string
                    description: Shop zip_4 code
                required:
                 - name
                 - email
                 - phone_number
                 - category
                 - street
                 - zones
                 - city
                 - providence
                 - zip_4
            required:
             - data
      responses:
        200:
          description: Return data for newly created shop 
          schema:
            type: object
            properties:
              data:
                type: object

  /zone/create:
    post:
      operationId: api.zone_create
      tags:
        - Users
      summary: Create a user and add it to the user list
      description: Create a new user in the user list
      parameters:
        - name: new_zone
          in: body
          description: User to create
          required: True
          schema:
            type: object
            properties:
              create_zone:
                type: object
                description: Email of user to create
                properties:
                  name:
                    type: string
                
      responses:
        200:
          description: Successful read user list 
          schema:
            type: object
            properties:
              create_zone_response:
                type: object
                properties:
                  id:
                    type: string

  /shop_category/create:
    post:
      operationId: api.shop_category_create
      tags:
        - Users
      summary: Create a user and add it to the user list
      description: Create a new user in the user list
      parameters:
        - name: new_shop_category
          in: body
          description: User to create
          required: True
          schema:
            type: object
            properties:
              create_shop_category:
                type: object
                description: Email of user to create
                properties:
                  type:
                    type: string
                
      responses:
        200:
          description: Successful read user list 
          schema:
            type: object
            properties:
              create_shop_category_response:
                type: object
                properties:
                  id:
                    type: string 
                  type:
                    type: string

  /shop_order/create:
    post:
      operationId: api.shop_order_create
      tags:
        - Users
      summary: Create a user and add it to the user list
      description: Create a new user in the user list
      parameters:
        - name: new_shop_order
          in: body
          description: User to create
          required: True
          schema:
            type: object
            properties:
              create_shop_order:
                type: object
                description: Email of user to create
                properties:
                  shop_id:
                    type: integer
                  price_paid:
                    type: boolean
                  order_taker_id:
                    type: integer
                  order_items:
                    type: array
                    items:
                      properties:
                        id:
                          type: integer
                        quantity_units:
                          type: integer
                
      responses:
        200:
          description: Successful read user list 
          schema:
            type: object
            properties:
              create_shop_response:
                type: object
                properties:
                  id:
                    type: string 

  /shop_order/update/delivered:
    post:
      operationId: api.shop_order_update
      tags:
        - Users
      summary: Create a user and add it to the user list
      description: Create a new user in the user list
      parameters:
        - name: update_shop_order
          in: body
          description: User to create
          required: True
          schema:
            type: object
            properties:
              update_shop_order_delivered:
                type: object
                description: Email of user to create
                properties:
                  shop_order_id:
                    type: integer
                  order_fulfiller_id:
                    type: integer

      responses:
        200:
          description: Successful read user list 
          schema:
            type: object
            properties:
              update_shop_order_delivered_response:
                type: object
                properties:
                  request_payment:
                    type: string 

securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: X-API-Key
    x-apikeyInfoFunc: api.basic_auth
